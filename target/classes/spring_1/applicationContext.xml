<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:util="http://www.springframework.org/schema/util"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd">

    <!--配置bean
    class：bean的全类名，通过反射的方式来在IOC容器中创建Bean，所以要求Bean中必须有无参构造函器
    -->
    <bean id="helloWorld" class="com.init.spring.beans.collections.HelloWorld">
        <property name="nameTest" value="Spring"></property>
    </bean>

    <!--通过构造方法来配置Bean属性-->
    <bean id="car" class="com.init.spring.beans.collections.Car">
        <constructor-arg type="java.lang.String">
            <value><![CDATA[<BMW^>]]></value>
        </constructor-arg>
        <constructor-arg value="3000" index="2"></constructor-arg>
        <constructor-arg value="90.08" type="double"></constructor-arg>
    </bean>

    <bean id="car2" class="com.init.spring.beans.collections.Car">
        <constructor-arg value="Audo" type="java.lang.String"></constructor-arg>
        <constructor-arg value="4000" index="2"></constructor-arg>
        <constructor-arg value="100.08" type="double"></constructor-arg>
    </bean>

    <bean id="person" class="com.init.spring.beans.collections.Per">
        <property name="name" value="windy"></property>
        <property name="age" value="24"></property>
        <!--<property name="car"  ref="car"></property>-->
        <!--这是一个内部Bean-->
        <property name="car">
            <bean class="com.init.spring.beans.collections.Car">
                <constructor-arg>
                    <null/>
                </constructor-arg>
                <constructor-arg value="3000"></constructor-arg>
                <constructor-arg value="90.08"></constructor-arg>
            </bean>
        </property>
    </bean>

    <!--配置级联属性-->
    <!-- <bean id="person2" class="com.init.spring.beans.collections.Per">
         <constructor-arg value="Wudi"></constructor-arg>
         <constructor-arg value="26"></constructor-arg>
         <constructor-arg ref="car"></constructor-arg>
         <property name="car.branch" value="Audo"></property>
     </bean>-->

    <!--配置集合属性-->
    <bean id="person3" class="com.init.spring.beans.collections.Person">
        <property name="name" value="Wudy"></property>
        <property name="age" value="27"></property>
        <property name="cars">
            <list>
                <ref bean="car"></ref>
                <ref bean="car2"></ref>
                <bean class="com.init.spring.beans.collections.Car">
                    <constructor-arg type="java.lang.String" value="Jax"></constructor-arg>
                    <constructor-arg value="5000" index="2"></constructor-arg>
                    <constructor-arg value="110.08" type="double"></constructor-arg>
                </bean>
            </list>
        </property>
    </bean>

    <!--配置Map的属性值-->
    <bean id="newPerson" class="com.init.spring.beans.collections.NewPerson">
        <property name="name" value="Rose"></property>
        <property name="age" value="28"></property>
        <property name="map">
            <map>
                <entry key="AA" value-ref="car"></entry>
                <entry key="BB">
                    <bean class="com.init.spring.beans.collections.Car">
                        <constructor-arg type="java.lang.String" value="Jax"></constructor-arg>
                        <constructor-arg value="5000" index="2"></constructor-arg>
                        <constructor-arg value="110.08" type="double"></constructor-arg>
                    </bean>
                </entry>
            </map>
        </property>
    </bean>

    <!--配置Properties的属性值-->
    <bean id="dataSource" class="com.init.spring.beans.collections.DataSource">
        <property name="properties">
            <props>
                <prop key="user">root</prop>
                <prop key="password">123456</prop>
                <prop key="jdbcUrl">jdbc:mysql://localhost:3306/user?serverTimezone=GMT%2B8</prop>
                <prop key="driverClass">com.mysql.jdbc.Driver</prop>
            </props>
        </property>
    </bean>

    <!--配置单例的Bean以供多个Bean使用-->
    <util:list id="cars">
        <ref bean="car"></ref>
        <ref bean="car2"></ref>
    </util:list>

    <bean id="person4" class="com.init.spring.beans.collections.Person">
        <property name="name" value="XiXi"></property>
        <property name="age" value="29"></property>
        <property name="cars" ref="cars"></property>
    </bean>

    <!--通过P命名空间为Bean属性赋值，需要先导入P的命名空间-->
    <bean id="person5" class="com.init.spring.beans.collections.Person"
          p:name="Ahha" p:age="30" p:cars-ref="cars"></bean>
</beans>